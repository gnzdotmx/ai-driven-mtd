version: '3.8'

services:
  app_golang_golang:
    build:
      context: ../
      dockerfile: docker/Dockerfile.golang-golang
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network
        # ipv4_address: 172.18.0.2

  app_golang_python:
    build:
      context: ../
      dockerfile: docker/Dockerfile.golang-golang
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network
        # ipv4_address: 172.18.0.2

  app_python_golang:
    build:
      context: ../
      dockerfile: docker/Dockerfile.python-golang
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network
        # ipv4_address: 172.18.0.3
  
  app_python_python:
    build:
      context: ../
      dockerfile: docker/Dockerfile.python-python
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network
        # ipv4_address: 172.18.0.3

  app_ubuntu_golang:
    build:
      context: ../
      dockerfile: docker/Dockerfile.ubuntu-golang
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network

  app_ubuntu_python:
    build:
      context: ../
      dockerfile: docker/Dockerfile.ubuntu-python
    ports:
      # - "${SELECTED_PORT}:8080"
      - "8080:8080"
    environment:
      - RESPONSE_FORMAT=${SELECTED_FORMAT}
      - RESPONSE_LANGUAGE=${SELECTED_LANGUAGE}
      - RESPONSE_OS=${SELECTED_OS}
    networks:
      - mtd_network

networks:
  mtd_network:
    driver: bridge
#     ipam:
#       config:
#         - subnet: 172.18.0.0/16